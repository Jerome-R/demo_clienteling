<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Application\Sonata\UserBundle\Entity\User;

/**
 * KpiCaptureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KpiCaptureRepository extends EntityRepository
{
	//KPI OF THE MONTH
	public function getUserKpisBetweenDatesSiege($niveau, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.niveau = :niveau')
		  	->setParameter('niveau', $niveau)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')		  	
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		;

		return $qb
			->getQuery()
			//->getOneOrNullResult();
			->getResult();
	}
	
	//MAUVAIS : RECUPERE PLUSIEURS RESULTATS
	public function getUserKpisBetweenDatesRM($niveau, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.niveau = :niveau')
		  	->setParameter('niveau', $niveau)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')		  	
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		;

		return $qb
			->getQuery()
			//->getOneOrNullResult();
			->getResult();
	}
	public function getUserKpisBetweenDatesSiegeBtq($btq, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.libelle = :libelle')
		  	->setParameter('libelle', $btq)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')		  	
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		;

		return $qb
			->getQuery()
			//->getOneOrNullResult();
			->getResult();
	}

	public function getUserKpisBetweenDates(User $user, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
			->where('k.niveau = :niveau')
		  	->setParameter('niveau', $niveau)
		  	->leftJoin('k.user', 'u')
		  	->addSelect('u')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		;

		return $qb
			->getQuery()
			//->getOneOrNullResult();
			->getResult();
	}

	public function getUserKpisBetweenDatesBtq( $date1, $date2, $btq){
		$qb = $this
			->createQueryBuilder('k')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->andWhere('k.libelle = :libelle')
		  	->setParameter('libelle', $btq)
		  	->orderBy('k.date', 'DESC')
		;

		return $qb
			->getQuery()
			//->getOneOrNullResult();
			->getResult();
	}


	// KPI OF THE YEAR
	public function getUserKpiYtdSiege($codeBoutiqueVendeur, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
		  	->where('k.codeBoutiqueVendeur = :codeBoutiqueVendeur')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('codeBoutiqueVendeur', $codeBoutiqueVendeur)
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	//MAUVAIS : RECUPERE PLUSIEURS RESULTATS
	public function getUserKpiYtdRM($codeBoutiqueVendeur, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
		  	->where('k.codeBoutiqueVendeur = :codeBoutiqueVendeur')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('codeBoutiqueVendeur', $codeBoutiqueVendeur)
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}
	public function getUserKpiYtd($point_vente_desc, $date1, $date2){
		$qb = $this
			->createQueryBuilder('k')
		  	->where('k.libelle = :libelle')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('libelle', $point_vente_desc)
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}

	public function getUserKpiLastYear($date1, $date2, $codeBoutiqueVendeur){
		$qb = $this
			->createQueryBuilder('k')
		  	->where('k.codeBoutiqueVendeur = :codeBoutiqueVendeur')
		  	->andWhere('k.date BETWEEN :date1 AND :date2')
		  	->setParameter('codeBoutiqueVendeur', $codeBoutiqueVendeur)
		  	->setParameter('date1', $date1)
		  	->setParameter('date2', $date2)
		  	->orderBy('k.date', 'DESC')
		  	->setMaxResults(1);
		;

		return $qb
			->getQuery()
			->getOneOrNullResult();
	}
}
