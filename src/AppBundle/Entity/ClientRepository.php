<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends \Doctrine\ORM\EntityRepository
{
	public function getClients()
	{
		$qb = $this->createQueryBuilder('c');

		$qb ->getQuery()
			->getResult();

		return $qb
			->getQuery()
			->getArrayResult();
	}

	public function getClientsWithCampaignId()
	{
		$qb = $this->createQueryBuilder('c')
			->where('c.idCampaignName IS NOT NULL')
		;

		return $qb
			->getQuery()
			->getResult();
		
	}

	public function getNbTopClients()
	{
		return $this->createQueryBuilder('tc')
		 ->select('COUNT(tc.id)')
		 ->where('tc.isTopclient = 1')
		 ->getQuery()
		 ->getSingleScalarResult();
	}

	/*public function searchTopClients($fullname)
	{	
		$qb = $this->createQueryBuilder('tc')
		        ->where('tc.getFullName LIKE "fullname%"')
		        ->setParameter('fullname', $fullname)
		        ->orderBy('tc.ca3ans', 'DESC')

		return $qb->getQuery();
				->getResult();
	}*/

	public function getTopClientsOfTheStore(array $options)
	{
		$fullname 		= $options['fullname'];
		$local 			= $options['local'];
		$filters 		= $options['filters'];
		$retailManager	= $options['rm'];
		$directeur 		= $options['dr'];
		$libelleBoutiqueRattachement			= $options['libelleBoutiqueRattachement'];
		$vendorCode		= $options['vendorCode'];

		$date = new \DateTime();

		if($fullname != null && $fullname != "")
			$name = explode( " ", $fullname);
		else
			$name = "";

		switch($local) {
			case "f":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->andWhere('tc.libelleBoutiqueRattachementTopclient = :libelleBoutiqueRattachement')
		        ->setParameter('libelleBoutiqueRattachement', $libelleBoutiqueRattachement)
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			case "t":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->andWhere('tc.libelleBoutiqueRattachementTopclient = :libelleBoutiqueRattachement')
		        ->setParameter('libelleBoutiqueRattachement', $libelleBoutiqueRattachement)
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			default:
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->andWhere('tc.libelleBoutiqueRattachementTopclient = :libelleBoutiqueRattachement')
		        ->setParameter('libelleBoutiqueRattachement', $libelleBoutiqueRattachement)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
		}

		if($name != "" && $name != null){

			$condition = "";

			foreach ($name as $key => $val) {
				if($key == 0)
					$condition = '(tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
				else
					$condition .= 'AND (tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
			}

			if ($condition != "")
				$qb->andWhere($condition);

			foreach ($name as $key => $val) {
				$qb->setParameter(':val'.$key, "%".$val."%");
			}
		}

		$condition = "";

		if (is_array($filters)) {
			foreach ($filters as $key => $option) {
				if ($key > 0)
					$and = 'AND ';
				else
					$and = "";

				switch($option) {
					case 'inactif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat < :dateInactif ' ;
						;
					break;
					case 'actif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat > :dateInactif ' ;
						;
					break;
					case 'optin' :
						$oui = "Oui";
						$in = "In";
						$in2 = "IN";
						$condition .= $and.'(tc.optin = :oui OR tc.optin = :in OR tc.optin = :in2) ' ;
						;
					break;
					case 'top' :
						$condition .= $and.'tc.ca3ans > 1635 ' ;
						;
					break;
					case 'newClient' :
						$oneTimer = "%One-timer%";
						$condition .= $and.'tc.segmentActuel LIKE :oneTimer ' ;
						;
					break;
				}			
			}
			if ($condition != ""){
				$qb->andWhere($condition);
				if(isset($dateInactif)){
					$qb->setParameter('dateInactif', $dateInactif);
				}
				if(isset($oneTimer)){
					$qb->setParameter('oneTimer', $oneTimer);
				}
				if(isset($oui)){
					$qb->setParameter('oui', $oui);
					$qb->setParameter('in', $in);
					$qb->setParameter('in2', $in2);
				}
			}
		}
			
		if($vendorCode != "" && $vendorCode != null){
			$qb->andWhere('tc.codeVendeur LIKE :codeVendeur');
			$qb->setParameter(':codeVendeur', '%'.$vendorCode.'%');
		}
		 
		return $qb->getQuery();
	      //->getArrayResult();
			//->getResult();
	}

	public function getTopClientsOfTheDirector(array $options)
	{
		$fullname 		= $options['fullname'];
		$local 			= $options['local'];
		$filters 		= $options['filters'];
		$retailManager	= $options['rm'];
		$directeur 		= $options['dr'];
		$libelleBoutiqueRattachement			= $options['libelleBoutiqueRattachement'];
		$vendorCode		= $options['vendorCode'];

		if($fullname != null && $fullname != "")
			$name = explode( " ", $fullname);
		else
			$name = "";

		switch($local) {
			case "f":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('u.directeur = :directeur')
		        ->setParameter('directeur', $directeur)
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			case "t":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('u.directeur = :directeur')
		        ->setParameter('directeur', $directeur)
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			default:
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('u.directeur = :directeur')
		        ->setParameter('directeur', $directeur)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
		}

		if($name != "" && $name != null){

			$condition = "";

			foreach ($name as $key => $val) {
				if($key == 0)
					$condition = '(tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
				else
					$condition .= 'AND (tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
			}

			if ($condition != "")
				$qb->andWhere($condition);

			foreach ($name as $key => $val) {
				$qb->setParameter(':val'.$key, "%".$val."%");
			}
		}

		$condition = "";
		if (is_array($filters)) {
			foreach ($filters as $key => $option) {
				if ($key > 0)
					$and = 'AND ';
				else
					$and = "";

				switch($option) {
					case 'inactif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat < :dateInactif ' ;
						;
					break;
					case 'actif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat > :dateInactif ' ;
						;
					break;
					case 'optin' :
						$oui = "Oui";
						$in = "In";
						$in2 = "IN";
						$condition .= $and.'(tc.optin = :oui OR tc.optin = :in OR tc.optin = :in2) ' ;
						;
					break;
					case 'top' :
						$condition .= $and.'tc.ca3ans > 1635 ' ;
						;
					break;
					case 'newClient' :
						$oneTimer = "%One-timer%";
						$condition .= $and.'tc.segmentActuel LIKE :oneTimer ' ;
						;
					break;
				}			
			}
			if ($condition != ""){
				$qb->andWhere($condition);
				if(isset($dateInactif)){
					$qb->setParameter('dateInactif', $dateInactif);
				}
				if(isset($oneTimer)){
					$qb->setParameter('oneTimer', $oneTimer);
				}
				if(isset($oui)){
					$qb->setParameter('oui', $oui);
					$qb->setParameter('in', $in);
					$qb->setParameter('in2', $in2);
				}
			}
		}

		if($vendorCode != "" && $vendorCode != null){
			$qb->andWhere('tc.codeVendeur LIKE :codeVendeur');
			$qb->setParameter(':codeVendeur', '%'.$vendorCode.'%');
		}
	 
		return $qb->getQuery();
	        //->getArrayResult();
			//->getResult();
	}

	public function getTopClientsOfTheRm(array $options)
	{
		$fullname 		= $options['fullname'];
		$local 			= $options['local'];
		$filters 		= $options['filters'];
		$retailManager	= $options['rm'];
		$directeur 		= $options['dr'];
		$libelleBoutiqueRattachement			= $options['libelleBoutiqueRattachement'];
		$vendorCode		= $options['vendorCode'];

		if($fullname != null && $fullname != "")
			$name = explode( " ", $fullname);
		else
			$name = "";
		
		switch($local) {
			case "f":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('u.retailManager = :retailManager')
		        ->setParameter('retailManager', $retailManager)
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			case "t":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('u.retailManager = :retailManager')
		        ->setParameter('retailManager', $retailManager)
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			default:
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('u.retailManager = :retailManager')
		        ->setParameter('retailManager', $retailManager)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
		}
		
		if($name != "" && $name != null){

			$condition = "";

			foreach ($name as $key => $val) {
				if($key == 0)
					$condition = '(tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
				else
					$condition .= 'AND (tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
			}

			if ($condition != "")
				$qb->andWhere($condition);

			foreach ($name as $key => $val) {
				$qb->setParameter(':val'.$key, "%".$val."%");
			}
		}

		$condition = "";

		if (is_array($filters)) {
			foreach ($filters as $key => $option) {
				if ($key > 0)
					$and = 'AND ';
				else
					$and = "";

				switch($option) {
					case 'inactif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat < :dateInactif ' ;
						;
					break;
					case 'actif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat > :dateInactif ' ;
						;
					break;
					case 'optin' :
						$oui = "Oui";
						$in = "In";
						$in2 = "IN";
						$condition .= $and.'(tc.optin = :oui OR tc.optin = :in OR tc.optin = :in2) ' ;
						;
					break;
					case 'top' :
						$condition .= $and.'tc.ca3ans > 1635 ' ;
						;
					break;
					case 'newClient' :
						$oneTimer = "%One-timer%";
						$condition .= $and.'tc.segmentActuel LIKE :oneTimer ' ;
						;
					break;
				}			
			}
			if ($condition != ""){
				$qb->andWhere($condition);
				if(isset($dateInactif)){
					$qb->setParameter('dateInactif', $dateInactif);
				}
				if(isset($oneTimer)){
					$qb->setParameter('oneTimer', $oneTimer);
				}
				if(isset($oui)){
					$qb->setParameter('oui', $oui);
					$qb->setParameter('in', $in);
					$qb->setParameter('in2', $in2);
				}
			}
		}

		if($vendorCode != "" && $vendorCode != null){
			$qb->andWhere('tc.codeVendeur LIKE :codeVendeur');
			$qb->setParameter(':codeVendeur', '%'.$vendorCode.'%');
		}

		return $qb->getQuery();
	        //->getArrayResult();
			//->getResult();
	}

	public function getAllTopClients(array $options )
	{
		$fullname 	= $options['fullname'];
		$local 		= $options['local'];
		$filters 	= $options['filters'];
		$retailManager	= $options['rm'];
		$directeur 	= $options['dr'];
		$libelleBoutiqueRattachement	= $options['libelleBoutiqueRattachement'];
		$vendorCode		= $options['vendorCode'];

		if($fullname != null && $fullname != "")
			$name = explode( " ", $fullname);
		else
			$name = "";
		
		switch($local) {
			case "f":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			case "t":
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->andWhere('tc.local = :local')
		        ->setParameter(':local', $local)
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
			default:
			$qb = $this->createQueryBuilder('tc')
		 		->where('tc.isTopclient = 1')
		        ->leftJoin('tc.userTopclient', 'u')
		        ->orderBy('tc.ca3ans', 'DESC')
		        //->setMaxResults(1000)
		        ;
			break;
		}
		
		if($name != "" && $name != null){

			$condition = "";

			foreach ($name as $key => $val) {
				if($key == 0)
					$condition = '(tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
				else
					$condition .= 'AND (tc.prenom LIKE :val'.$key.' OR tc.nom LIKE :val'.$key.' ) ';
			}

			if ($condition != "")
				$qb->andWhere($condition);

			foreach ($name as $key => $val) {
				$qb->setParameter(':val'.$key, "%".$val."%");
			}
		}

		$condition = "";

		if (is_array($filters)) {
			foreach ($filters as $key => $option) {
				if ($key > 0)
					$and = 'AND ';
				else
					$and = "";

				switch($option) {
					case 'inactif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat < :dateInactif ' ;
						;
					break;
					case 'actif' :
						$dateInactif = date("Y-m-d", strtotime("-6 months"));
						$condition .= $and.'tc.datedernachat > :dateInactif ' ;
						;
					break;
					case 'optin' :
						$oui = "Oui";
						$in = "In";
						$in2 = "IN";
						$condition .= $and.'(tc.optin = :oui OR tc.optin = :in OR tc.optin = :in2) ' ;
						;
					break;
					case 'top' :
						$condition .= $and.'tc.ca3ans > 1635 ' ;
						;
					break;
					case 'newClient' :
						$oneTimer = "%One-timer%";
						$condition .= $and.'tc.segmentActuel LIKE :oneTimer ' ;
						;
					break;
				}			
			}
			if ($condition != ""){
				$qb->andWhere($condition);
				if(isset($dateInactif)){
					$qb->setParameter('dateInactif', $dateInactif);
				}
				if(isset($oneTimer)){
					$qb->setParameter('oneTimer', $oneTimer);
				}
				if(isset($oui)){
					$qb->setParameter('oui', $oui);
					$qb->setParameter('in', $in);
					$qb->setParameter('in2', $in2);
				}
			}
		}

		if($vendorCode != "" && $vendorCode != null){
			$qb->andWhere('tc.codeVendeur LIKE :codeVendeur');
			$qb->setParameter(':codeVendeur', '%'.$vendorCode.'%');
		}
		
		return $qb->getQuery();
	        //->getArrayResult();
			//->getResult();
	}
}
