# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
    admin.campaign:
        class: AppBundle\Admin\CampaignAdmin
        arguments: [~, AppBundle\Entity\Campaign, ~]
        tags:
            - { name: sonata.admin, group: "Campaigns", manager_type: orm, label: table_Campaign }

    admin.recipient:
        class: AppBundle\Admin\RecipientAdmin
        arguments: [~, AppBundle\Entity\Recipient, ~]
        tags:
            - { name: sonata.admin, group: "Campaigns", manager_type: orm, label: table_Recipient }

    admin.data.recipient:
        class: AppBundle\Admin\DataRecipientAdmin
        arguments: [~, AppBundle\Entity\DataRecipient, ~]
        tags:
            - { name: sonata.admin, group: "Campaigns", manager_type: orm, label: table_Data_Recipient }

    admin.client:
        class: AppBundle\Admin\ClientAdmin
        arguments: [~, AppBundle\Entity\Client, ~]
        tags:
            - { name: sonata.admin, group: "Clients", manager_type: orm, label: 'table_Client' }

    admin.dateImport:
        class: AppBundle\Admin\DateImportAdmin
        arguments: [~, AppBundle\Entity\DateImport, ~]
        tags:
            - { name: sonata.admin, group: "Imports", manager_type: orm, label: 'table_Import' }

    cron.import.recipient:
        class: AppBundle\Service\ImportRecipientCronService
        arguments:
            - %local_ip%
            - @service_container

    cron.import.top.client:
        class: AppBundle\Service\ImportTopClientCronService
        arguments:
            - %local_ip%
            - @service_container

    cron.import.lignes.vente:
        class: AppBundle\Service\LignesVenteCronService
        arguments:
            - %local_ip%
            - @service_container

    cron.export.recipient:
        class: AppBundle\Service\ExportRecipientCronService
        arguments:
            - %local_ip%
            - @service_container

    cron.import.kpi:
        class: AppBundle\Service\ImportKpiCronService
        arguments:
            - %local_ip%
            - @service_container

    cron.delete.daily:
        class: AppBundle\Service\DeleteClientDailyCronService
        arguments: [ @doctrine.orm.default_entity_manager ]

    cron.send_password_email:
        class: AppBundle\Service\PasswordEmailCronService
        arguments:
            - @doctrine.orm.default_entity_manager
            - @service_container

    import.file.log:
        class: AppBundle\Service\ImportFileLogService
        arguments: [ @doctrine.orm.default_entity_manager ]

    login.security.authentication_failure_event_listener:
        class: AppBundle\Service\AuthenticationListener
        arguments: [ @doctrine.orm.default_entity_manager ]
        tags:
            - { name: kernel.event_listener, event: security.authentication.failure, method: onAuthenticationFailure }

    login.security.interactive_login_listener:
        class: AppBundle\Service\AuthenticationListener
        arguments: [ @doctrine.orm.default_entity_manager ]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onAuthenticationSuccess }

    app.set_email_footer:
        class: AppBundle\Service\SetEmailFooterService

    app.twig_extension:
        class: AppBundle\Service\TwigExtensionService
        public: false
        arguments: [ @doctrine.orm.default_entity_manager ]
        tags:
            - { name: twig.extension }

    app.email_set_default_datas:
        class: AppBundle\Service\EmailDefaultDatasService
        arguments: [ @service_container ]

    app.is_authorized_client:
        class: AppBundle\Service\IsAuthorizedService
        arguments: [ @doctrine.orm.default_entity_manager ]

    app.listener.maintenance:
        class: AppBundle\Service\MaintenanceService
        arguments:
            container: "@service_container"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    kernel.listener.response_listener:
        class: AppBundle\Service\ResponseListener
        arguments: [ @service_container ]
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    kernel.listener.exception_listener:
        class: AppBundle\Service\ExceptionListener
        arguments: [ @service_container ]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    app.pdo_connect:
        class: AppBundle\Service\PdoService
        arguments: [ @service_container ]

    app.client_filter:
        class: AppBundle\Service\ClientFilterService
        arguments:
            - @service_container
            - @doctrine.orm.default_entity_manager